@import url('https://fonts.googleapis.com/css2?family=Playfair+Display:ital,wght@0,400..900;1,400..900&display=swap');

*:where(:not(html, iframe, canvas, img, svg, video, audio):not(svg *, symbol *)) {
    all: unset;
    display: revert;
}

html{
    scroll-behavior:smooth;
    scroll-snap-type: y proximity;

    
}

body{
    height: 100dvh;
    background: linear-gradient(180deg, #FBF0EE 0%, #DBC0BA 100%) no-repeat;
    scroll-behavior: smooth
}

h1{
    line-height: 1;
    font-size: 4rem;
    color: #000;
    font-weight: 700;
    margin-bottom: 1rem;

    background: linear-gradient(180deg, #D85548 24%, #4D252F 100%);
    background-clip: text;
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    user-select: none;
}


h2{
    line-height: 1;
    font-size: 1.2rem;
    color: #000;
    font-weight: 400;
    margin-bottom: 1rem;

    background: linear-gradient(180deg, #D85548 24%, #4D252F 100%);
    background-clip: text;
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    user-select: none;

}


@media (max-width: 768px) {
    h1{
        font-size: 2rem;
    }

    h2{
        font-size: 1rem;
        margin-bottom: 0.5rem;
    }
}


/* Preferred box-sizing value */
*,
*::before,
*::after {
    box-sizing: border-box;
    font-family: "Playfair Display", serif;
}

/* Reapply the pointer cursor for anchor tags */
a, button {
    cursor: revert;
}

/* Remove list styles (bullets/numbers) */
ol, ul, menu {
    list-style: none;
}

/* For images to not be able to exceed their container */
img {
    max-inline-size: 100%;
    max-block-size: 100%;
}

/* removes spacing between cells in tables */
table {
    border-collapse: collapse;
}

/* Safari - solving issue when using user-select:none on the <body> text input doesn't working */
input, textarea {
    -webkit-user-select: auto;
}

/* revert the 'white-space' property for textarea elements on Safari */
textarea {
    white-space: revert;
}

/* minimum style to allow to style meter element */
meter {
    -webkit-appearance: revert;
    appearance: revert;
}

/* preformatted text - use only for this feature */
:where(pre) {
    all: revert;
}

/* reset default text opacity of input placeholder */
::placeholder {
    color: unset;
}

/* remove default dot (â€¢) sign */
::marker {
    content: initial;
}

/* fix the feature of 'hidden' attribute.
   display:revert; revert to element instead of attribute */
:where([hidden]) {
    display: none;
}

/* revert for bug in Chromium browsers
   - fix for the content editable attribute will work properly.
   - webkit-user-select: auto; added for Safari in case of using user-select:none on wrapper element */
:where([contenteditable]:not([contenteditable="false"])) {
    -moz-user-modify: read-write;
    -webkit-user-modify: read-write;
    overflow-wrap: break-word;
    -webkit-line-break: after-white-space;
    -webkit-user-select: auto;
}

/* apply back the draggable feature - exist only in Chromium and Safari */
:where([draggable="true"]) {
    -webkit-user-drag: element;
}

/* Revert Modal native behavior */
:where(dialog:modal) {
    all: revert;
}

:root{
    --primary: #9F0102;
    --secondary: #068B76;
    --accent: #F3C43E;
    --background: #FFEFDA;
}